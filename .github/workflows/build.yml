name: ci
on: [push, pull_request]

permissions:
  contents: read

jobs:
  build-and-test:
    name: >-
      CI
      ${{ matrix.os }}
      ${{ matrix.compiler }}
      ${{ matrix.optimized && 'release' || 'debug'}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        compiler: [clang, gcc, msvc]
        os: [ubuntu-latest, macos-latest, windows-latest]
        optimized: [true, false]
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: macos-latest
            compiler: msvc
          - os: macos-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang
          - os: windows-latest
            compiler: gcc
        include:
          - compiler: clang
            CC: clang
            CXX: clang++
          - compiler: gcc
            CC: gcc
            CXX: g++
          - compiler: msvc
            CC:
            CXX:

    env:
      CMAKE_BUILD_IDR: ${{ github.workspace }}/build
      CMAKE_BUILD_TYPE: ${{ matrix.optimized && 'RelWithDebInfo' || 'Debug' }}
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      BINARY_SUFFIX: ${{ startsWith(matrix.os, 'windows') && '.exe' || ''}}
      BINARY_PATH: >-
        ${{ format(startsWith(matrix.os, 'windows') && '{0}\build\{1}\' || '{0}/build/', github.workspace, matrix.optimized && 'RelWithDebInfo' || 'Debug')}}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies on Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install libunwind-dev libgoogle-perftools-dev libkyotocabinet-dev libsnappy-dev libsqlite3-dev

      - name: Generate build config
        run: >-
          cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_IDR }}" -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{runner.temp}}/install_test/

      - name: Build
        run: >-
          cmake --build "${{ env.CMAKE_BUILD_IDR }}" --config "${{ env.CMAKE_BUILD_TYPE }}"

      - name: Run Tests
        working-directory: ${{ github.workspace }}/build
        run: echo "CTEST Runing..."

      - name: Run Benchmarks
        run: echo "Benchmarks Runing..."

      - name: Test Cmake installation
        run: cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target install
